@inherits LayoutComponentBase
@using AstroPanda.Blazor.Toolkit
@using BlazorToolkit.Wasm.Components
@using MudBlazor

<MyMudThemeProvider />
<MyMudProviders />
<ContextMenuProvider @ref="cxt"/>
<div class="page" @onclick="CloseContextMenus">
<MudLayout>
    <MudAppBar Elevation="0">
		<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        
        <MudSpacer />
        <EnvironmentLabel />
        
        <MudSpacer />        

        <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Link="https://mudblazor.com/" Target="_blank" />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor/" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">MudBlazorTemplates1</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent >
        <div @oncontextmenu="OpenContextMenu" @oncontextmenu:preventDefault @oncontextmenu:stopPropagation>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
         </div>
    </MudMainContent>
</MudLayout>
</div>

@code {
    [Inject]
    private IContextMenuService _contextService { get; set; }

    bool _drawerOpen = true;
    private ContextMenuProvider cxt { get; set; }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void CloseContextMenus() => cxt.CloseAll();

    private void OpenContextMenu(MouseEventArgs e)
    {
        _contextService.Open<ExampleContextMenu>(e.ClientX, e.ClientY);
    }
}